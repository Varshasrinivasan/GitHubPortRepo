using System;
using System.Collections.Generic;

namespace Trees
{
    public class MinimumDepth
    {
        public static int FindDepth(TreeNode root)
        {
            if (root == null)
                return 0;
            int minDepth = 1;
            Queue<TreeNode> queue = new Queue<TreeNode>();
            queue.Enqueue(root);
            while(queue.Count!=0)
            {
                int size = queue.Count;
                for(int i=0;i<size;i++)
                {
                    TreeNode temp = queue.Dequeue();
                   
                    if (temp.left == null && temp.right == null)
                        return minDepth;
                    if (temp.left != null)
                        queue.Enqueue(temp.left);
                    if (temp.right != null)
                        queue.Enqueue(temp.right);
                }
                minDepth++;

            }
            return minDepth;
        }

        public static void Main()
        {
            TreeNode root = new TreeNode(12);
            root.left = new TreeNode(7);
            root.right = new TreeNode(1);
            root.right.left = new TreeNode(10);
            root.right.right = new TreeNode(5);
            Console.WriteLine("Tree Minimum Depth: " + FindDepth(root));
            root.left.left = new TreeNode(9);
            root.right.left.left = new TreeNode(11);
            Console.WriteLine("Tree Minimum Depth: " + FindDepth(root));
        }
    }
}

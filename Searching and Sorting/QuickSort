using System;

namespace Algorithms
{
    class QuickSortClass
    {
        public static void Main(string[] args)
        {
            int[] arr = { 4, 7, 2, 6, 9, 3, 1, 7, 2, 5, 3 };
            QuickSortClass obj = new QuickSortClass();
            int[] resArr = obj.QuickSort(arr);
            foreach(int res in resArr)
            {
                Console.Write(res);
            }
        }

        public int[] QuickSort(int[] arr)
        {
            QuickSort(arr, 0, arr.Length - 1);
            return arr;
        }

        public void QuickSort(int[] arr, int left, int right )
        {
            // Break recursion
            if (left >= right)
                return;
            int pivot = arr[(left + right) / 2];
            int index = Partition(arr, left, right, pivot);
            QuickSort(arr, left, index - 1);
            QuickSort(arr, index, right);

        }

        public int Partition(int[] arr, int left, int right, int pivot)
        {
            while(left<=right)
            {
                while (arr[left] < pivot)
                    left++;
                while (arr[right] > pivot)
                    right--;
                if(left<=right)
                {
                    Swap(arr, left, right);
                    left++;
                    right--;
                }
            }
            return left;
        }

        public void Swap(int[] arr, int left, int right)
        {
            int temp = arr[left];
            arr[left] = arr[right];
            arr[right] = temp;
        }
    }
}

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
// Problem : Given a sorted linked list, delete all duplicates such that each element appear only once.
// TC : O(N)
// SC : O(1)
public class Solution {
    public ListNode DeleteDuplicates(ListNode head) {
        if(head==null)
            return head;
        else if (head.next==null)
            return head;
        ListNode dummy = head;
        while(dummy!=null && dummy.next!=null)
        {
            if(dummy.val == dummy.next.val)
            {
                while(dummy.next!=null && dummy.val == dummy.next.val)
                    if(dummy.next.next!=null)
                        dummy.next = dummy.next.next;
                    else
                        dummy.next = null;
            }
            dummy = dummy.next;
            
        }
        return head;
    }
}

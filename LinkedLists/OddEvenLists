/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
// Problem :Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.You should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.
// TC : O(n)
// SC :O()
public class Solution {
    public ListNode OddEvenList(ListNode head) {
        // edge case
        if(head==null)
        {
            return null;
        }
        ListNode evens = new ListNode(0);
        ListNode odds = new ListNode(0);
        ListNode evencurr = evens;
        ListNode oddcurr = odds;
        int count =1;
        while(head!=null)
        {
            if(count%2==0)
            {
                evencurr.next = head;
                evencurr= evencurr.next;
            }
            else
            {
                oddcurr.next = head;
                oddcurr= oddcurr.next;
            }
            head = head.next;
            count++;
                
        }
        oddcurr.next = evens.next;
        evencurr.next=null;
        return odds.next;
        
    }
}

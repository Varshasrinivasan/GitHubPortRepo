//Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.
// Note:
// The number of elements initialized in nums1 and nums2 are m and n respectively.
// You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2.

// Time Complexity : O(m+n)
// Space Complexity : O(1)
public class Solution {
    public void Merge(int[] nums1, int m, int[] nums2, int n) {
        int p1 = m-1;
        int p2 = n-1;
        int p = nums1.Length - 1;;
        while(p > -1)
        {
            int cand1 = p1>-1? nums1[p1] : int.MinValue;
            int cand2 = p2>-1? nums2[p2] : int.MinValue;
            if(cand2>cand1)
            {
                nums1[p] = cand2;
                p2--;
            }
            else
            {
                nums1[p] = cand1;
                p1--;
            }
            p--;
        }
        
    }
}

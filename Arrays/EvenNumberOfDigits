// Given an array nums of integers, return how many of them contain an even number of digits.
 // Example 1:
// Input: nums = [12,345,2,6,7896]
// Output: 2
// Explanation: 
// 12 contains 2 digits (even number of digits). 
// 345 contains 3 digits (odd number of digits). 
// 2 contains 1 digit (odd number of digits). 
// 6 contains 1 digit (odd number of digits). 
// 7896 contains 4 digits (even number of digits). 
// Therefore only 12 and 7896 contain an even number of digits.

public class Solution {
    public int FindNumbers(int[] nums) {
        // edge cases
        if(nums==null)
            return 0;
        int len = nums.Length;
        if(len==0)
            return 0;
        int total_digits =0;
        for(int i=0;i<len;i++)
        {
            int curr_digits=0;
            while(nums[i]>0)
            {
                curr_digits++;
                nums[i] = nums[i]/10;
            }
            if(curr_digits%2==0)
            {
                total_digits++;
            }
        }
        return total_digits;
    }
}

// Time Complexity : O(n)
// Space complexity : O(1)

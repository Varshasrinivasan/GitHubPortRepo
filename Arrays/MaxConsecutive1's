//Given a binary array, find the maximum number of consecutive 1s in this array.
// Example 1:
// Input: [1,1,0,1,1,1]
// Output: 3
// Explanation: The first two digits or the last three digits are consecutive 1s.
//     The maximum number of consecutive 1s is 3.

public class Solution {
    public int FindMaxConsecutiveOnes(int[] nums) {
        // edge cases
        if(nums==null)
            return 0;
        int len = nums.Length;
        if(len==0)
            return 0;
        int max_count=0;
        int curr_count=0;
        for(int i=0;i<len;i++)
        {
            if(nums[i]==1)
            {
                curr_count++;   
            }
            max_count = Math.Max(max_count,curr_count);
            if(nums[i]==0)
            {
                curr_count=0;
            }
           
        }
        
        return max_count;
    }
}

// Time complexity : O(N) n is number of elems in array
// Space complexity : O(1)

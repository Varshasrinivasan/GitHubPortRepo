// Problem : Longest Substring Without Repeating Characters
// Time Complexity : O(N)
// Space Complexity : O(N)
public class Solution {
    public int LengthOfLongestSubstring(string s) {
        Dictionary<char,int> dict = new  Dictionary<char,int>();
        int maxLen = 1;
        if(s.Length==0)
            return 0;
        int windowStart =0;
        
        for(int windowEnd=0;windowEnd< s.Length;windowEnd++)
        {
            char c = s[windowEnd];
            if(dict.ContainsKey(c))
            {
                windowStart = Math.Max(windowStart, dict[c] +1);
                
            dict[c]=windowEnd;
                
            }
            else
            {
                dict.Add(c,windowEnd);
            }
            maxLen = Math.Max(maxLen,windowEnd-windowStart+1);
        }
        return maxLen;
    }
}

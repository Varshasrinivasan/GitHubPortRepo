// Problem :Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.
// Note: You can only move either down or right at any point in time.
// TC :O(m*n)
// SC : O(1)
public class Solution {
    public int MinPathSum(int[][] grid) {
        
        int rows = grid.Length;
        // edge case
        if(rows==0)
        {
            return 0;
        }
        int cols = grid[0].Length;
          for (int i = rows-1; i >=0; i--)
            {
                for (int j = cols-1; j >=0; j--)
                {
                   if(i==rows-1 && j==cols-1)
                   {
                       continue;
                   }
                   else if(i==rows-1 && j!=cols-1)
                   {
                       grid[i][j] = grid[i][j+1] + grid[i][j] ;
                   }
                  else if(i!=rows-1 && j==cols-1)
                   {
                       grid[i][j] = grid[i+1][j] + grid[i][j] ;
                   }
                 else
                   {
                       grid[i][j] = Math.Min(grid[i][j+1], grid[i+1][j]) + grid[i][j] ;
                   }
                  
                }
            }

            return grid[0][0];
    }
}
